@using Web.Controllers;
@model CatalogViewModel;

@{
    ViewData["Title"] = "Search";
}

<!-- Search and filter form -->
<form class="mb-3 mt-4" asp-controller="@HomeController.Name" asp-action="@nameof(HomeController.Index)" method="get">
  <div class="input-group">
    <input class="form-control" placeholder="Enter name of lot you want to search" aria-label="Search" name="name" aria-describedby="btn-search">
    <button class="btn btn-primary" type="submit" id="btn-search">Search</button>
  </div>

  <div class="input-group d-flex gap-3 mt-3 align-items-center">
    <label>Price</label>
    <input type="number" class="form-control" placeholder="Min" name="min" min="0" />
    <input type="number" class="form-control" placeholder="Max" name="max" />
  </div>
</form>

<!-- Categories -->
<div class="d-flex my-3" style="overflow:hidden;" id="categories-list">
  <button onclick="toggleCategories()" class="btn btn-dark btn-sm dropdown-toggle"></button>
  @foreach(var category in Model.Categories)
  {
    @if(Model.SelectedCategories.Contains(category.Name)) {

    <a class="btn btn-primary btn-sm"
      asp-controller="@HomeController.Name" asp-action="@nameof(HomeController.Index)"
      asp-route-categories="@string.Join(',', Model.SelectedCategories.Where(c => c != category.Name))"
    >
      @category.Name
    </a>
    } else {
      <a class="btn btn-light btn-sm"
     asp-controller="@HomeController.Name" asp-action="@nameof(HomeController.Index)"
     asp-route-categories="@string.Join(',', Model.SelectedCategories.Append(category.Name))">
      @category.Name
    </a>
    }
  }
</div>


<!-- List of lots -->
<div class="row g-4">
  @foreach (var product in Model.Lots)
  {
    <div class="col-md-12 col-lg-4 mb-4 mb-lg-0">
      <div class="card">
        <div class="card-body">
          @*@if (product.Images.Count != 0)
          {
            <img src="@product.Images.ElementAt(0).Url" class="card-img-top mb-3" width="250" height="280" alt="@product.Name" />
          }*@
          <div class="mb-3">
            <h5 class="mb-3">@product.Name</h5>
            <p class="fs-5 fw-bold my-1">@product.Price $</p>
          </div>
          <div class="d-flex gap-3 align-items-center pb-2 mb-1">
            @*@if (User.Identity != null && User.Identity.Name != null)
            {
              <form asp-controller="Catalog" asp-action="@nameof(CatalogController.ToFavorites)" method="post">
                <input type="hidden" name="ProductId" value="@product.Id" />
                <input type="hidden" name="CategoryId" value="@product.CategoryId" />
                <input type="submit" class="btn btn-outline-primary btn-sm" value="Add to favorites" />
              </form>
              <form asp-controller="Cart" asp-action="@nameof(CartController.AddToCart)" method="post">
                <input type="hidden" name="productId" value="@product.Id" />
                <input type="hidden" name="CategoryId" value="@ViewBag.CategoryId" />
                <input type="submit" class="btn btn-outline-primary btn-sm" value="Add to cart" />
              </form>
            }*@
            <a class="btn btn-sm btn-outline-primary"
            @*asp-action="@nameof(CatalogController.Details)" asp-route-id="@product.Id"*@
            >Details</a>
          </div>
        </div>
      </div>
    </div>
  }
</div>



@section Scripts {

  <!-- Toggle of categories selection -->
  <script>
    function toggleCategories() {
        var categoriesList = document.getElementById("categories-list")
        if(categoriesList.classList.contains("flex-wrap")) {
            categoriesList.classList.remove("flex-wrap")
        } else {
            categoriesList.classList.add("flex-wrap")
        }
    }
  </script>
}